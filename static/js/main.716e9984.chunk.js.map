{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","util/ApiKeys.js","util/Spinner.js","util/Error.js","App.js","serviceWorker.js","index.js"],"names":["library","add","faMapMarkerAlt","faPhone","Business","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","business","props","react_default","a","createElement","className","src","imageSrc","alt","name","href","address","city","target","rel","react_fontawesome_index_es","icon","state","zipCode","phone","category","priceRange","rating","reviewCount","url","React","Component","BusinessList","businesses","map","Business_Business_Business","id","sortByOptions","Best Match","Highest Rated","Most Reviewed","SearchBar","_this","call","term","location","sortBy","termError","locationError","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","sortByOption","event","setState","length","searchYelp","type","keyCode","clearErrorMessageAndSearchResults","loading","preventDefault","_this2","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","renderSortByOptions","method","onKeyDown","autoComplete","onChange","placeholder","Yelp","fetch","concat","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","price","Error","catch","Spinner","react_spinners","css","sizeUnit","size","color","errorMessage","App","faTruckMonster","SearchBar_SearchBar_SearchBar","Spinner_Spinner","BusinessList_BusinessList_BusinessList","Error_Error","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.716e9984.chunk.js","sourcesContent":["import React from 'react';\nimport './Business.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faPhone } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faMapMarkerAlt, faPhone);\n\n//React component class, which will be used to render information about each business\nexport class Business extends React.Component {\n    render() {\n        const business = this.props.business;\n        \n        return (\n            <div className=\"Business\">\n                <div className=\"image-container\">\n                    <img \n                        src={business.imageSrc} \n                        alt=\"\"\n                    />    \n\n                    <h2>{business.name}</h2>  \n                    <div className=\"Business-information\">\n                        <div className=\"Business-address\">\n                            <p>                                \n                                <a href={\"https://www.google.com/maps/place/\" + business.address + \" \" + business.city} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    {business.address}  <FontAwesomeIcon icon=\"map-marker-alt\" />   \n                                </a>\n\n                            </p>\n                            <p>{business.city}</p>\n                            <p>{business.state} {business.zipCode}</p>\n                            <p>\n                                {business.phone} \n                                <FontAwesomeIcon icon=\"phone\" />\n                            </p>\n                        </div>\n\n                        <div className=\"Business-reviews\">\n                            <h3>{business.category}</h3>\n                            <h3>{business.priceRange}</h3>\n                            <h3 className=\"rating\">{business.rating} star{business.rating > 0 && business.rating <= 1 ? \"\" : \"s\"}</h3>\n                            <p>{business.reviewCount} review{business.reviewCount === 1 ? \"\" : \"s\"}</p>\n                        </div>\n                    </div>   \n                    <a href={business.url} target=\"_blank\" rel=\"noopener noreferrer\">Open restaurant's page</a>\n                </div>           \n            </div>\n        );\n    }\n}","import React from 'react';\nimport './BusinessList.css';\nimport { Business } from '../Business/Business';\n\n//React component used to nicely render information about restaurants received from YELP API\nexport class BusinessList extends React.Component {\n    render() {\n        return (\n            <div className=\"BusinessList\">\n                {this.props.businesses.map(business => {\n                    return <Business key={business.id} business={business} />\n                })}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './SearchBar.css';\n\n// One of the object keys will be used to pass corresponding value to Yelp API to return results in accordance with user's choice\nconst sortByOptions = {\n    'Best Match' : \"best_match\",\n    'Highest Rated' : \"rating\",\n    'Most Reviewed' : \"review_count\"\n};\n\n// React component Seach bar class\nexport class SearchBar extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            term : '',\n            location: '',\n            sortBy: 'best_match',\n            termError: false,\n            locationError: false       \n        };   \n        \n        this.handleTermChange = this.handleTermChange.bind(this);\n        this.handleLocationChange = this.handleLocationChange.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n    }\n\n    // Function checking if the current search option is selected and returnig css class name active if it's the case\n    getSortByClass (sortByOption) {\n        if (sortByOption === this.state.sortBy) {\n            return 'active';\n        }\n        else {\n            return '';\n        }\n    }\n\n//============================================================================    \n// Event handlers\n    handleTermChange(event) {\n\n        this.setState({\n            term: event.target.value,\n            termError: event.target.value.length > 0 && false\n        });\n    }\n\n    handleLocationChange(event) {\n        \n        this.setState({\n            location: event.target.value,\n            locationError: event.target.value.length > 0 && false\n        });\n    }\n\n    handleSortByChange(sortByOption) {\n\n        this.setState({\n            sortBy: sortByOption\n        });\n\n        if (this.state.term !== \"\" && this.state.location !== \"\") {\n            this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n        }\n    }\n\n    handleSearch(event) {\n\n        if (event.type === \"click\" || event.keyCode === 13) {\n            // Call clearErrorMessageAndSearchResults function located in App.js to clear possible error message and previous search results\n            this.props.clearErrorMessageAndSearchResults();\n\n            // Check if user entered search request and location\n            if (this.state.location === \"\" && this.state.term === \"\") {\n                this.setState({\n                    termError: true,\n                    locationError: true\n                });\n              }\n            else if (this.state.term === \"\") {\n                this.setState({\n                    termError: true,\n                    locationError: false\n                });\n            }\n            else if (this.state.location === \"\") {\n                this.setState({\n                    termError: false,\n                    locationError: true\n                });\n            }\n        \n            else {//if user has entered search request and location send GET request to the YELP API\n                //if both field aren't empty clear error flags\n                this.setState({\n                    termError: false,\n                    locationError: false,\n                    loading: true\n                });\n\n                this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n            }\n\n            event.preventDefault(); \n        }\n    }    \n//============================================================================\n\n    // Will return li elements containing search options for users\n    renderSortByOptions() {\n        return Object.keys(sortByOptions).map( sortByOption => {\n            let sortByOptionValue = sortByOptions[sortByOption];\n\n            return <li className={this.getSortByClass(sortByOptionValue)} \n                        key={sortByOptionValue}\n                        onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>\n                            {sortByOption}\n                    </li>\n        });\n    }\n\n    render() {\n        return (\n\n            <div className=\"SearchBar\">\n                <div className=\"SearchBar-sort-options\">\n                    <ul>\n                        {this.renderSortByOptions()}\n                    </ul>\n                </div>\n\n                <div className=\"SearchBar-fields\">\n                    <form method=\"#\" onKeyDown={this.handleSearch} autoComplete=\"on\" >\n                        <div>\n                            <div className=\"inputFieldErrorMessage\">{this.state.termError && \"The field cannot be empty\"}</div>\n                            <input onChange={this.handleTermChange}\n                                    placeholder=\"Search Businesses\"\n                                    className={this.state.termError && \"inputFieldError\"} \n                                    />\n                        </div>\n\n                        <div>\n                            <div className=\"inputFieldErrorMessage\">{this.state.locationError && \"The field cannot be empty\"}</div>               \n                            <input onChange={this.handleLocationChange}\n                                    placeholder=\"Where?\" \n                                    className={this.state.locationError && \"inputFieldError\"} />    \n                        </div>                            \n                    </form>\n                </div> \n\n                <div className=\"SearchBar-submit\">\n                    <a onClick={this.handleSearch}>Let's Go</a>\n                </div>\n            </div>\n        );\n    }\n}","import { apiKey } from './ApiKeys';\n\nexport const Yelp = {\n    search(term, location, sortBy) {\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,\n                    {headers: {\n                        'Authorization' : `Bearer ${apiKey}`\n                    }}\n        ).then((response) => { \n            return response.json();\n        }).then((jsonResponse) => {\n                return jsonResponse.businesses.map((business) => {\n                    if (jsonResponse.businesses) {\n                        return {\n                            id: business.id,\n                            imageSrc: business.image_url,\n                            name: business.name,\n                            address: business.location.address1,\n                            city: business.location.city,\n                            state: business.location.state,\n                            zipCode: business.location.zip_code,\n                            category: business.categories[0].title,\n                            rating: business.rating,\n                            reviewCount: business.review_count,\n                            url: business.url,\n                            phone: business.phone,\n                            priceRange: business.price\n                        };\n                    }\n                    else {\n                        throw Error(\"Nothing was returned\");\n                    }\n\n                });\n            }).catch(() => {\n                return [];\n            });\n    }\n}","export const apiKey = 'AtXwTkXAS_KRjWQfaQqZby_CgxqfySQsmzZwqXZjglLvYi29i69_ToIcvXeGPYMG75gqVTQz9o-U-kxr8FKrt-vIdsCNpweeNnf3NVuYlInAm2MrHqeb5DhmamhGXHYx';","import React from 'react';\nimport { css } from '@emotion/core';\nimport { FadeLoader } from 'react-spinners';\nimport './Spinner.css';\n\nconst override = `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 10% auto;\n`;\n\nexport class Spinner extends React.Component {\n\n    render() {\n        return (\n            <div className=\"sweet-loading\">\n                <FadeLoader \n                    css={override}\n                    sizeUnit={\"rem\"}\n                    size={6}\n                    color={'black'}\n                    loading={true}\n                />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './Error.css';\n\nexport const Error = (props) => {\n    return (<h3 className=\"error\">{props.errorMessage}</h3>);\n}","import React from 'react';\nimport './App.css';\nimport { BusinessList } from './components/BusinessList/BusinessList.js';\nimport { SearchBar } from './components/SearchBar/SearchBar.js';\nimport { Yelp } from './util/Yelp';\nimport { Spinner } from './util/Spinner';\nimport { Error } from './util/Error';\nimport { faTruckMonster } from '@fortawesome/free-solid-svg-icons';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      businesses: [],\n      loading: false,\n      errorMessage: \"\"\n    };\n\n    this.searchYelp = this.searchYelp.bind(this);\n    this.clearErrorMessageAndSearchResults = this.clearErrorMessageAndSearchResults.bind(this);\n  } \n\n  searchYelp(term, location, sortBy) {\n      // Set loading state to true, so spinner will be active until request to Yelp API is fulfilled\n      this.setState({\n        businesses: [],\n        loading: faTruckMonster\n      });\n\n      // Send request to Yelp API\n      Yelp.search(term, location, sortBy).then((businesses) => {\n        if (businesses.length > 0) {\n          this.setState({\n            loading: false,\n            businesses: businesses,\n            errorMessage: \"\"\n          });\n        }\n        else {\n          this.setState({\n            loading: false,\n            businesses: [],\n            errorMessage: \"Your search hasn't returned any results. Please check your input or the Internet connection\"\n          })\n        }\n      }); \n  }\n\n  //Function will be called from searchBar component to remove \"Your search hasn't returned any results\" error message\n  clearErrorMessageAndSearchResults() {\n\n    this.setState({\n      businesses: [],\n      errorMessage: \"\"\n    });\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <h1>Ravenous</h1>\n        <SearchBar searchYelp = {this.searchYelp} clearErrorMessageAndSearchResults = {this.clearErrorMessageAndSearchResults} />\n        <Spinner loading={this.state.loading} />\n        <BusinessList businesses = {this.state.businesses} />\n        <Error errorMessage = {this.state.errorMessage} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import { BrowserRouter as Router } from 'react-router-dom';\n// import 'bootstrap/dist/css/bootstrap.css';\n// import 'bootstrap/dist/css/bootstrap-theme.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// ReactDOM.render(<Router basename={process.env.PUBLIC_URL}>< App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}